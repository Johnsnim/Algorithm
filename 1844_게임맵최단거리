function solution(maps) {
  const dy = [1, 0, -1, 0];
  const dx = [0, 1, 0, -1];

  const width = maps.length;
  const height = maps[0].length;

  const visited = [...maps].map((r) => r.map((c) => 1));
  const queue = [[0, 0]];

  while (queue.length) {
    const [y, x] = queue.shift();

    for (let i = 0; i < 4; i++) {
      const nx = x + dx[i];
      const ny = y + dy[i];

      if (ny >= 0 && nx >= 0 && ny < width && nx < height) {
        if (maps[ny][nx] === 1 && visited[ny][nx] === 1) {
          visited[ny][nx] = visited[y][x] + 1;
          queue.push([ny, nx]);
        }
      }
    }
  }

  if (visited[width - 1][height - 1] === 1) return -1;
  return visited[width - 1][height - 1];
}
